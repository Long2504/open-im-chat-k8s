apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  labels:
    app: redis
  namespace: database
data:
  redis.conf: |-
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    databases 16
    always-show-logo yes
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    requirepass redis123
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: database
type: Opaque
data:
  # redis123 encoded in base64
  redis-password: cmVkaXMxMjM=
  
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
  namespace: database
spec:
  ports:
  - port: 16379
    targetPort: 6379
    name: redis
  selector:
    app: redis
  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
  namespace: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: database
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        kubernetes.io/hostname: k8s-master-2  # THAY THẾ bằng tên worker node thực tế của bạn
      securityContext:
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7.0
        command:
          - redis-server
          - "/etc/redis/redis.conf"
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-password
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 2
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
